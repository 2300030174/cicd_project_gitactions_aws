# .github/workflows/deploy.yml
name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout workflow repo
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Clone frontend repo
      run: git clone https://github.com/2300030174/cicd_project_frontend.git frontend

    - name: Clone backend repo
      run: git clone https://github.com/2300030174/cicd_project_backend.git backend

    - name: Build and push Docker images
      run: |
        docker compose -f docker-compose.yml build
        docker compose -f docker-compose.yml push

    - name: Deploy to EC2
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        # Save SSH key locally
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem

        # SSH into EC2 and deploy
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          cd /path/to/your/project
          docker compose pull
          docker compose up -d
        EOF
